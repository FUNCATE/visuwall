<!-- Copyright (C) 2010 Julien SMADJA <julien dot smadja at gmail dot com> 
	- Arnaud LEMAIRE <alemaire at norad dot fr> Licensed under the Apache License, 
	Version 2.0 (the "License"); you may not use this file except in compliance 
	with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.jsmadja.wall</groupId>
	<artifactId>wall-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>wall - Server</name>

	<parent>
		<groupId>com.jsmadja.wall</groupId>
		<artifactId>wall</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../</relativePath>
	</parent>

	<dependencies>
		<dependency>
			<groupId>com.jsmadja.wall</groupId>
			<artifactId>wall-hudsonclient</artifactId>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>


		<!-- json -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>


		<dependency>
			<groupId>net.awired.ajsl</groupId>
			<artifactId>ajsl-core</artifactId>
			<version>1.0-ALPHA5</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>r07</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.sli4j</groupId>
			<artifactId>sli4j-slf4j-logback</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.sonar</groupId>
			<artifactId>sonar-ws-client</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>

		<!-- DB -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
			<version>3.4.0.GA</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>3.3.2.GA</version>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>3.4.0.GA</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security.version}</version>
		</dependency>


		<!-- servlet/jsp -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>1.8.0</version>
				<configuration>
					<header>src/main/licence.txt</header>
					<strictCheck>true</strictCheck>
					<useDefaultExcludes>false</useDefaultExcludes>
					<excludes>
						<exclude>.gitignore</exclude>
						<exclude>.git/**</exclude>
						<exclude>target/**</exclude>
						<exclude>.settings/**</exclude>
						<exclude>.project</exclude>
						<exclude>.classpath</exclude>
						<exclude>LICENCE</exclude>
						<exclude>README</exclude>
						<exclude>**/MANIFEST.MF</exclude>
						<exclude>src/main/webapp/WEB-INF/lib/**</exclude>
						<exclude>src/main/webapp/WEB-INF/classes/**</exclude>
						<exclude>src/main/webapp/images/**</exclude>
						<exclude>.externalToolBuilders/**</exclude>
						<exclude>.pmd/**</exclude>
						<exclude>src/test/resources/**</exclude>
						<exclude>src/main/webapp/js/jquery/**</exclude>
						<exclude>src/main/xsd/**</exclude>
						<exclude>infinitest.filters</exclude>
						<exclude>src/main/java/com/jsmadja/wall/projectwall/generated/**</exclude>
					</excludes>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.10</version>
				<configuration>
					<stopKey>F13</stopKey>
					<stopPort>8080</stopPort>
				</configuration>
			</plugin>


			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1-beta-1</version>
				<configuration>
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
					<webResources>
						<resource>
							<directory>${project.build.directory}/generated-resources</directory>
						</resource>
					</webResources>
					<!-- for putting Main-Class into war -->
					<archive>
						<manifest>
							<mainClass>Main</mainClass>
						</manifest>
						<manifestEntries>
							<Implementation-Version>${project.version}</Implementation-Version>
							<Hudson-Version>${project.version}</Hudson-Version>
							<Jenkins-Version>${project.version}</Jenkins-Version>
						</manifestEntries>
					</archive>
					<!--outputFileNameMapping>@{artifactId}@.@{extension}@</outputFileNameMapping -->
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>list</goal>
						</goals>
						<configuration>
							<outputFile>${basedir}/target/classes/dependencies.txt</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jvnet.maven-antrun-extended-plugin</groupId>
				<artifactId>maven-antrun-extended-plugin</artifactId>
				<version>1.41</version>
				<executions>
					<execution>
						<id>package</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<!-- deploy the war as a jar, so that the tests can pull this into 
									the classpath -->
								<attachArtifact file="target/jwall.war"
									classifier="war-for-test" type="jar" />
							</tasks>
						</configuration>
					</execution>
					<execution>
						<id>resgen</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<verifyArtifact>false</verifyArtifact>
							<tasks>
								<mkdir dir="target/generated-resources" />

								<!-- put executable war header -->
								<resolveArtifact groupId="org.jenkins-ci"
									artifactId="executable-war" version="1.18" type="jar"
									property="executable-war.jar" />
								<unjar src="${executable-war.jar}" dest="target/generated-resources">
									<patternset>
										<include name="**/*.class" />
									</patternset>
								</unjar>

								<!-- dependencies that goes to unusual locations -->
								<resolveArtifact artifactId="remoting"
									tofile="${basedir}/target/generated-resources/WEB-INF/remoting.jar" />
								<resolveArtifact artifactId="remoting"
									tofile="${basedir}/target/generated-resources/WEB-INF/slave.jar" />
								<resolveArtifact groupId="${project.groupId}"
									artifactId="cli" classifier="jar-with-dependencies" version="${project.version}"
									type="jar"
									tofile="${basedir}/target/generated-resources/WEB-INF/jenkins-cli.jar" />
								<resolveArtifact groupId="org.jvnet.hudson.winstone"
									artifactId="winstone" version="0.9.10-hudson-24" type="jar"
									tofile="${basedir}/target/generated-resources/winstone.jar" />

								<!-- bundled plugins -->
								<resolveArtifact type="hpi" groupId="${project.groupId}"
									artifactId="maven-plugin" version="${project.version}"
									tofile="${basedir}/target/generated-resources/WEB-INF/plugins/maven-plugin.hpi" />
								<resolveArtifact type="hpi" groupId="org.jvnet.hudson.plugins"
									artifactId="ssh-slaves" version="0.14"
									tofile="${basedir}/target/generated-resources/WEB-INF/plugins/ssh-slaves.hpi" />
								<resolveArtifact type="hpi" groupId="org.jvnet.hudson.plugins"
									artifactId="subversion" version="1.20"
									tofile="${basedir}/target/generated-resources/WEB-INF/plugins/subversion.hpi" />
								<resolveArtifact type="hpi" groupId="org.jvnet.hudson.plugins"
									artifactId="cvs" version="1.2"
									tofile="${basedir}/target/generated-resources/WEB-INF/plugins/cvs.hpi" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- this is really just a patched version of maven-jetty-plugin to workaround 
					issue #932 -->
				<groupId>org.jvnet.hudson.tools</groupId>
				<artifactId>maven-hudson-dev-plugin</artifactId>
				<version>6.1.7-hudson-1</version>
				<configuration>
					<contextPath>${contextPath}</contextPath>
					<connectors>
						<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>${port}</port>
						</connector>
					</connectors>
					<!-- read directly from core module's output directory, so that changes 
						are picked up right away without running mvn. -->
					<classesDirectory>../core/target/classes</classesDirectory>
					<!-- use the test classpath for loading resources, since this takes 
						priority -->
					<testClassesDirectory>../core/src/main/resources</testClassesDirectory>
					<useTestClasspath>true</useTestClasspath>
					<!-- Reload webapp when you hit ENTER. (See JETTY-282 for more) -->
					<consoleForceReload>true</consoleForceReload>
					<userRealms>
						<userRealm implementation="org.mortbay.jetty.security.HashUserRealm">
							<name>default</name>
							<config>${basedir}/src/realm.properties</config>
						</userRealm>
					</userRealms>
					<systemProperties>
						<systemProperty>
							<name>HUDSON_HOME</name>
							<value>${HUDSON_HOME}</value>
						</systemProperty>
						<systemProperty>
							<!-- always reload views during debugging -->
							<name>stapler.jelly.noCache</name>
							<value>true</value>
						</systemProperty>
						<systemProperty>
							<!-- show the stapler evaluation during execution -->
							<name>stapler.trace</name>
							<value>true</value>
						</systemProperty>
						<systemProperty>
							<!-- always reload scripts during debugging -->
							<name>hudson.script.noCache</name>
							<value>true</value>
						</systemProperty>
						<systemProperty>
							<!-- load view resources from the source directly, again for real 
								time change -->
							<name>stapler.resourcePath</name>
							<value>
								../core/src/main/resources;
								../ui-samples-plugin/src/main/resources;
								../maven-plugin/src/main/resources
              </value>
						</systemProperty>
						<systemProperty>
							<!-- enable the plugins in main by default -->
							<name>hudson.bundled.plugins</name>
							<value>
								${basedir}/../maven-plugin/target/test-classes/the.hpl,
								${basedir}/../ui-samples-plugin/target/test-classes/the.hpl
              </value>
						</systemProperty>
						<systemProperty>
							<!-- stat collection pointless -->
							<name>hudson.model.UsageStatistics.disabled</name>
							<value>true</value>
						</systemProperty>
						<systemProperty>
							<name>hudson.Main.development</name>
							<value>true</value>
						</systemProperty>
						<systemProperty>
							<!-- this adds 3 sec to the shutdown, and most likely pointless, too -->
							<name>hudson.DNSMultiCast.disabled</name>
							<value>true</value>
						</systemProperty>
					</systemProperties>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
